'''Make transactional data for ARM.'''import osimport pandas as pdimport pickleimport numpy as npfrom sklearn.metrics import silhouette_scoreimport pickleimport csv# Get all yearly datapwd = os.getcwd()path = os.path.join(pwd, 'clustering_data')file = os.path.join(path, 'yearly_data.pkl')with open(file, 'rb') as f:    data = pickle.load(f)# Get just 2013 data - assume features that map to snow are the same for# all yearsdata = data[0]cols = data.columns[1:-2]# Define csv location to savesave_loc = os.path.join(pwd, 'arm_data')if not os.path.isdir(save_loc):    os.mkdir(save_loc)save_file = os.path.join(save_loc, '2013.csv')# Make file with headersif not os.path.exists(save_file):    with open(save_file, 'w') as f:        writer = csv.writer(f, delimiter=',', lineterminator='\n')        writer.writerow(list(cols))all_data = [[''] * len(cols) for i in range(len(data))]all_data = np.array(all_data)for (i, c) in enumerate(cols):        # Get column data    col_data = list(data[c])        # Split into quartiles     q1 = np.quantile(col_data, 0.25)    q3 = np.quantile(col_data, 0.75)        col = [''] * len(col_data)    for (j, d) in enumerate(col_data):                # Get snowfall labels        if c == 'snowfall':                        if d > 0:                str_val = 'y'            else:                str_val = 'n'                        else:                        # Assign label based on quartile data falls in            if d <= q1:                str_val = 'l'            elif d >= q3:                str_val = 'h'            else:                str_val = 'm'                    col[j] = str_val            # Save the column    all_data[:, i] = col        # Write data to csvwith open(save_file, 'a') as f:    writer = csv.writer(f, delimiter=',', lineterminator='\n')    for r in all_data:        writer.writerow(r)                        